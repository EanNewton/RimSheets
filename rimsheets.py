#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.4
#  in conjunction with Tcl version 8.6
#    Aug 23, 2020 02:24:47 PM EDT  platform: Linux

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import rimsheets_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    rimsheets_support.set_Tk_var()
    top = Toplevel1 (root)
    rimsheets_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    rimsheets_support.set_Tk_var()
    top = Toplevel1 (w)
    rimsheets_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("630x464+951+424")
        top.minsize(1, 1)
        top.maxsize(2545, 1570)
        top.resizable(1, 1)
        top.title("RimSheets Generator")

        self.Button1 = tk.Button(top)
        self.Button1.place(relx=0.455, rely=0.58, height=31, width=60)
        self.Button1.configure(command=rimsheets_support.run)
        self.Button1.configure(text='''Start''')

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.095, rely=0.043, height=32, width=92)
        self.Label1.configure(text='''Files to Scan''')

        self.Label3 = tk.Label(top)
        self.Label3.place(relx=0.433, rely=0.179, height=21, width=138)
        self.Label3.configure(text='''Timeout (0 = none)''')

        self.Entry1 = tk.Entry(top)
        self.Entry1.place(relx=0.717, rely=0.179,height=23, relwidth=0.137)
        self.Entry1.configure(background="white")
        self.Entry1.configure(font="TkFixedFont")
        self.Entry1.configure(textvariable=rimsheets_support.eb_timeout)

        self.Checkbutton4 = tk.Checkbutton(top)
        self.Checkbutton4.place(relx=0.417, rely=0.267, relheight=0.052
                , relwidth=0.278)
        self.Checkbutton4.configure(justify='left')
        self.Checkbutton4.configure(text='''Output as single file?''')
        self.Checkbutton4.configure(variable=rimsheets_support.cb_singleFile)

        self.TSeparator1 = ttk.Separator(top)
        self.TSeparator1.place(relx=0.0, rely=0.134, relwidth=1.017)

        self.TSeparator2 = ttk.Separator(top)
        self.TSeparator2.place(relx=0.367, rely=0.0, relheight=0.556)
        self.TSeparator2.configure(orient="vertical")

        self.TSeparator3 = ttk.Separator(top)
        self.TSeparator3.place(relx=0.0, rely=0.556, relwidth=0.992)

        self.Label2 = tk.Label(top)
        self.Label2.place(relx=0.565, rely=0.043, height=32, width=87)
        self.Label2.configure(text='''Options''')

        self.Checkbutton1 = tk.Checkbutton(top)
        self.Checkbutton1.place(relx=0.016, rely=0.172, relheight=0.05
                , relwidth=0.044)
        self.Checkbutton1.configure(justify='left')
        self.Checkbutton1.configure(variable=rimsheets_support.cb_enableCore)

        self.Checkbutton2 = tk.Checkbutton(top)
        self.Checkbutton2.place(relx=0.016, rely=0.259, relheight=0.05
                , relwidth=0.044)
        self.Checkbutton2.configure(justify='left')
        self.Checkbutton2.configure(variable=rimsheets_support.cb_enableRoyal)

        self.Checkbutton3 = tk.Checkbutton(top)
        self.Checkbutton3.place(relx=0.016, rely=0.345, relheight=0.05
                , relwidth=0.044)
        self.Checkbutton3.configure(justify='left')
        self.Checkbutton3.configure(variable=rimsheets_support.cb_enableWorkshop)

        self.Label4 = tk.Label(top)
        self.Label4.place(relx=0.079, rely=0.172, height=21, width=35)
        self.Label4.configure(text='''Core''')

        self.Label5 = tk.Label(top)
        self.Label5.place(relx=0.079, rely=0.259, height=21, width=41)
        self.Label5.configure(text='''Royal''')

        self.Label6 = tk.Label(top)
        self.Label6.place(relx=0.079, rely=0.345, height=21, width=116)
        self.Label6.configure(text='''Steam Workshop''')

        self.TProgressbar1 = ttk.Progressbar(top, mode='determinate', maximum=100, value=0)
        self.TProgressbar1.place(relx=0.032, rely=0.9, relwidth=0.937, relheight=0.0, height=19)
        self.TProgressbar1.configure(length="600")
        self.TProgressbar1.configure(variable=rimsheets_support.progressBar)

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)
 
        self.Message1 = tk.Message(top)
        self.Message1.place(relx=0.1, rely=0.65, relheight=0.2, relwidth=0.8)
        self.Message1.configure(text='''Message''')
        self.Message1.configure(justify='center')
        self.Message1.configure(textvariable=rimsheets_support.msg_output)
        self.Message1.configure(width=500) 
        

if __name__ == '__main__':
    vp_start_gui()





